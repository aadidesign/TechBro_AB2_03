<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>NeoMed Flux - Medical Records Management</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

    body {
      font-family: 'Inter', sans-serif;
    }

    .glassmorphism {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .dark .glassmorphism {
      background: rgba(17, 24, 39, 0.6);
      border: 1px solid rgba(255, 255, 255, 0.08);
    }

    .sapphire-teal-gradient {
      background: linear-gradient(135deg, #1143e3 0%, #38b2ac 100%);
    }
  </style>
</head>

<body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-300">
  <!-- Main Content Area -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header with AI Summary and Action Button -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">Medical Records Management</h1>
        <div
          class="glassmorphism p-3 rounded-xl text-gray-700 dark:text-gray-200 text-sm max-w-2xl flex items-start space-x-2 animate-pulse">
          <svg class="w-5 h-5 text-sapphire-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor"
            viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
          <div>
            <span class="font-semibold text-sapphire-600 dark:text-sapphire-400">AI Insight:</span>
            <span>Analyzing patient records for trends and risk factors...</span>
          </div>
        </div>
      </div>

      <button type="button"
        class="group inline-flex items-center px-4 py-2 bg-gradient-to-r from-sapphire-600 to-teal-500 border border-transparent rounded-xl shadow-lg text-sm font-medium text-white hover:from-sapphire-700 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sapphire-500 transition-all hover:scale-105 active:scale-95"
        onclick="openModal()">
        <svg class="w-5 h-5 mr-2 group-hover:animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
        </svg>
        Add New Record
      </button>
    </div>

    <!-- Smart Search Bar -->
    <div class="mb-8">
      <div class="relative glassmorphism rounded-xl overflow-hidden shadow-lg">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-sapphire-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
        <input type="text" id="searchInput"
          class="block w-full pl-10 pr-3 py-4 bg-transparent border-0 focus:ring-2 focus:ring-cyan-300 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none"
          placeholder="Search by patient name, diagnosis, or record ID..." oninput="filterRecords()" />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
          <svg class="h-5 w-5 text-sapphire-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z" />
          </svg>
        </div>
      </div>
    </div>

    <!-- Quick Filters -->
    <div class="flex flex-wrap gap-3 mb-6">
      <button
        class="px-4 py-2 bg-sapphire-100 dark:bg-sapphire-900 dark:bg-opacity-30 text-sapphire-700 dark:text-sapphire-300 rounded-lg text-sm font-medium hover:bg-sapphire-200 dark:hover:bg-sapphire-800 transition-colors">
        Today
      </button>
      <button
        class="px-4 py-2 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
        Upcoming
      </button>
      <button
        class="px-4 py-2 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
        Past
      </button>
      <button
        class="px-4 py-2 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
        Priority
      </button>
      <button class="ml-auto px-4 py-2 text-sapphire-600 dark:text-sapphire-400 text-sm font-medium flex items-center">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
        </svg>
        More Filters
      </button>
    </div>

    <!-- Patient Records Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <!-- Sample Patient Record Card -->
      <div class="glassmorphism p-6 rounded-2xl shadow-lg hover:shadow-xl transition-shadow">
        <div class="flex items-center justify-between mb-4">
          <div class="text-lg font-semibold text-gray-900 dark:text-white">John Doe</div>
          <span
            class="px-2 py-1 text-xs font-semibold bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300 rounded-full">
            Stable
          </span>
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400 mb-4">
          <p><strong>Age:</strong> 35</p>
          <p><strong>Gender:</strong> Male</p>
          <p><strong>Last Visit:</strong> 2023-10-15</p>
        </div>
        <div class="flex space-x-2">
          <button
            class="text-sapphire-600 dark:text-sapphire-400 hover:text-sapphire-700 dark:hover:text-sapphire-500 transition-colors">
            View Details
          </button>
          <button class="text-coral-500 hover:text-coral-600 transition-colors">
            Request AI Support
          </button>
        </div>
      </div>
      <!-- Add more patient cards here -->
    </div>

    <!-- Dynamic Health Charts -->
    <div class="mt-8">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Health Trends</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="glassmorphism p-6 rounded-2xl shadow-lg">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Blood Pressure</h3>
          <div class="h-40 bg-gray-100 dark:bg-gray-800 rounded-lg animate-pulse"></div>
        </div>
        <div class="glassmorphism p-6 rounded-2xl shadow-lg">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Heart Rate</h3>
          <div class="h-40 bg-gray-100 dark:bg-gray-800 rounded-lg animate-pulse"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Record Modal -->
  <div id="addRecordModal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
    <div class="bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg w-full max-w-md relative z-10">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Add New Record</h2>
        <button id="closeModal" class="text-gray-700 dark:text-gray-300 text-2xl leading-none"
          onclick="closeModal()">&times;</button>
      </div>
      <form action="/record/add" method="POST">
        <div class="mb-4">
          <label for="patientName" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Patient
            Name</label>
          <input type="text" name="patientName" id="patientName"
            class="mt-1 block w-full border border-gray-300 dark:border-gray-700 rounded-md p-2 bg-gray-50 dark:bg-gray-700 dark:text-white"
            placeholder="Enter patient name" required>
        </div>
        <div class="mb-4">
          <label for="diagnosis" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Diagnosis</label>
          <input type="text" name="diagnosis" id="diagnosis"
            class="mt-1 block w-full border border-gray-300 dark:border-gray-700 rounded-md p-2 bg-gray-50 dark:bg-gray-700 dark:text-white"
            placeholder="Enter diagnosis" required>
        </div>
        <div class="mb-4">
          <label for="treatment" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Treatment</label>
          <textarea name="treatment" id="treatment" rows="3"
            class="mt-1 block w-full border border-gray-300 dark:border-gray-700 rounded-md p-2 bg-gray-50 dark:bg-gray-700 dark:text-white"
            placeholder="Enter treatment details" required></textarea>
        </div>
        <div class="flex justify-end">
          <button type="submit"
            class="px-4 py-2 bg-gradient-to-r from-sapphire-600 to-teal-500 text-white rounded-lg shadow hover:from-sapphire-700 hover:to-teal-600 transition-all">
            Save Record
          </button>
        </div>
      </form>
    </div>
    <!-- Modal Overlay -->
    <div class="fixed inset-0 bg-black opacity-50" onclick="closeModal()"></div>
  </div>



  <script>
    const parseAIResponse = (rawResponse) => {
      try {
        return JSON.parse(
          rawResponse.recommendation
            .replace(/```(json)?/g, '')
            .trim()
        );
      } catch (error) {
        console.error('Failed to parse AI response:', error);
        return null;
      }
    };

    function showDetails(patientId) {
      const modal = new bootstrap.Modal(document.getElementById(`detailsModal-${patientId}`));
      modal.show();
    }

    function showCondition(patientId) {
      const modal = new bootstrap.Modal(document.getElementById(`conditionModal-${patientId}`));
      modal.show();
    }

    async function requestAISupport(patientId) {
      try {
        const response = await fetch(`http://localhost:3010/generate-recommendation`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ patientId })
        });

        if (!response.ok) throw new Error('Network response was not ok');

        const data = await response.json();

        // Parse the AI response
        const parseAIResponse = (rawResponse) => {
          try {
            return JSON.parse(
              rawResponse.recommendation
                .replace(/```(json)?/g, '')
                .trim()
            );
          } catch (error) {
            console.error('Failed to parse AI response:', error);
            return null;
          }
        };

        const recommendation = parseAIResponse(data);

        // Get the modal elements
        const modalElement = document.getElementById(`aiSupportModal-${patientId}`);
        const modalBody = modalElement.querySelector('.modal-body');

        // Clear previous content
        modalBody.innerHTML = '';

        if (recommendation) {
          // Build the modal content
          const content = `
          <h5 class="mb-3">Recommendation for ${recommendation.patient_name}</h5>
          <p><strong>Summary:</strong> ${recommendation.recommendation_summary}</p>
          
          <div class="row mt-4">
            <div class="col-md-6">
              <h6>Treatment Plan</h6>
              <ul class="list-group mb-3">
                <li class="list-group-item">
                  <strong>Medications:</strong>
                  ${recommendation.treatment_plan.medications.map(m => `<div>${m}</div>`).join('')}
                </li>
                <li class="list-group-item">
                  <strong>Lifestyle Changes:</strong>
                  ${recommendation.treatment_plan.lifestyle_changes.map(l => `<div>${l}</div>`).join('')}
                </li>
              </ul>
            </div>
            
            <div class="col-md-6">
              <h6>Monitoring Instructions</h6>
              <ul class="list-group">
                ${recommendation.treatment_plan.monitoring_instructions.map(m => `
                  <li class="list-group-item">${m}</li>
                `).join('')}
              </ul>
            </div>
          </div>
          
          <div class="mt-4">
            <p><strong>Confidence Score:</strong> ${recommendation.confidence_score}%</p>
            <p><strong>Risk Assessment:</strong> ${recommendation.risk_assessment}</p>
            <p><strong>Follow-up Schedule:</strong> ${recommendation.followup_schedule}</p>
          </div>
        `;

          modalBody.innerHTML = content;
        } else {
          modalBody.innerHTML = `<div class="alert alert-danger">Error parsing AI response</div>`;
        }

        // Show the modal
        new bootstrap.Modal(modalElement).show();

      } catch (error) {
        console.error('Error:', error);
        alert('Error generating AI recommendation');
      }

      function closeModal() {
        document.getElementById('addRecordModal').classList.add('hidden');
      }

      function filterRecords() {
        const searchInput = document.getElementById('searchInput').value.toLowerCase();
        // Add filtering logic here
      }
  </script>
</body>

</html>